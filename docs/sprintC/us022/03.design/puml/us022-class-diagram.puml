@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
'skinparam linetype orto

skinparam classAttributeIconSize 0


class AuthenticationRepository {
    + getCurrentUserSession()
}

class Employee {
    + getGreenSpacesManagedByMe()
    + getPendingTasks()
    + planTaskInAgenda(selectedTask, startDate)
    + addNewAgendaEntry(Task)
    + validateAgendaEntry(Task)
}

class EmployeeRepository {
    + getEmployeeByUserID(userID)
}

class Organization {
    + anyUserHasId(userID)
}

class OrganizationRepository {
    + getOrganizationByUserID(userID)
}

class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getAuthenticationRepository()
    + getEmployeeRepository()
    + getOrganizationRepository()
}

class AgendaController {
    + AgendaController()
    + getUserFromSession()
    + getOrganizationByID(userID)
    + getGreenSpacesManagedByMe()
    + getPendingTasks()
    + addNewAgendaEntry(selectedTask, selectedGreenSpace, startDate)
}

class AgendaUI {
}

class GreenSpaces {
    + getGreenSpacesManagedByMe()
}

class Tasks {
    + getPendingTasks()
    + planTaskInAgenda(startDate)
}

note left of AgendaController
    - userEmail and userRole is obtained
    from the user session.
end note

Repositories -> Repositories : instance
AgendaUI .> AgendaController
AgendaController .> Repositories : repositories
Repositories --> "1" AuthenticationRepository
Repositories --> "1" EmployeeRepository
Repositories --> "1" OrganizationRepository
EmployeeRepository "1" --> "*" Employee : stores
OrganizationRepository "1" --> "*" Organization : stores
Employee --> "1" GreenSpaces : manages
Employee --> "*" Tasks : has

@enduml