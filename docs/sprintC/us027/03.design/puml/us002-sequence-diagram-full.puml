@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "HRM" as ADM
participant ":CreateJobUI" as UI
participant ":CreateJobController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "AuthFacade\n:AuthenticationRepository" as AUTHREP
participant "userSession\n:UserSession" as USER
participant "organizationRepository:\nOrganizationRepository" as OrganizationRepository
participant "organization\n:Organization" as ORG
participant "Job\n:Job" as JOB

activate ADM

        ADM -> UI : asks to create a new job
        activate UI

        UI --> ADM : requests data (Job name)
    deactivate UI

    ADM -> UI : types requested data (Job name)
    activate UI

        UI --> ADM : shows requested data
    deactivate UI

    ADM -> UI : submits data
    activate UI

        UI -> CTRL : createJob(Job name)
        activate CTRL

        CTRL -> CTRL : getUserFromSession()

        CTRL -> RepositorySingleton : getInstance()
        activate RepositorySingleton
        CTRL <-- RepositorySingleton : Repositories
        deactivate RepositorySingleton

        CTRL -> PLAT : getAuthenticationRepository()

        activate PLAT
        CTRL <-- PLAT : AuthenticationRepository()
        deactivate PLAT



        CTRL -> AUTHREP : getCurrentUserSession()

        activate AUTHREP




        AUTHREP -> USER : isLoggedWithRule(HRM)

        activate USER

        AUTHREP <-- USER : "True/False"
        AUTHREP --> USER : getUserId(email)
        AUTHREP <-- USER : userId(email)
        deactivate USER

        CTRL <-- AUTHREP : userId(email)
        deactivate AUTHREP

        CTRL -> CTRL : getOrganizationByUserId(email)


        CTRL -> RepositorySingleton : getInstance()
        activate RepositorySingleton
        CTRL <-- RepositorySingleton : Repositories
        deactivate RepositorySingleton



        CTRL -> PLAT : getOrganizationRepository()
        activate PLAT
        CTRL <-- PLAT : OrganizationRepository()
        deactivate PLAT


        CTRL -> OrganizationRepository :getOrganizationByUserId(email)
        activate OrganizationRepository
            loop for each organization
            OrganizationRepository -> ORG : anyUserHasId(email)
            activate ORG
            OrganizationRepository <-- ORG : True/False
            deactivate ORG
            end loop

        CTRL <-- OrganizationRepository : organitazion







            CTRL -> ORG: createJob(Job name)
            activate ORG

                ORG -> JOB**: create(job)
                note right of JOB
                  Job constructor validates Job name
                endnote


                activate ORG
                    ORG -> ORG: addJob(job)
                    ORG -> ORG: validateJob(job)

                    deactivate ORG

                    ORG --> ORG
                    ORG --> ORG
                deactivate ORG

                ORG --> CTRL : job

            deactivate ORG

            CTRL --> UI: job
            deactivate CTRL
            UI --> ADM: displays operation success
    deactivate UI

deactivate ADM

@enduml