@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "Green Space Manager" as GSM
participant ":RegisterGreenSpaceUI" as UI
participant ":RegisterGreenSpaceController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "GreenSpaceRepository:\nGreenSpaceRepository" as GSR
participant "AuthFacade\n:AuthenticationRepository" as AUTHREP
participant "userSession\n:UserSession" as USER

participant "EmployeeRepository\n:EmployeeRepository" as EMPREP
participant "Employee\n:Employee" as EMP
participant "OrganizationRepository\n:OrganizationRepository" as ORGREP
participant "Organization\n:Organization" as ORG

activate GSM

        GSM -> UI : requests to register a new green space
        activate UI

        UI --> GSM : requests data (Name, Size classification, Area, Address)
    deactivate UI

    GSM -> UI : types requested data (Name, Size classification, Area, Address)
    activate UI

    UI -> CTRL : registerGreenSpace(Name, Size classification, Area, Address)
    activate CTRL

        CTRL -> CTRL : getUserFromSession()

        CTRL -> RepositorySingleton : getInstance()
        activate RepositorySingleton
        CTRL <-- RepositorySingleton : Repositories
        deactivate RepositorySingleton

        CTRL -> PLAT : getAuthenticationRepository()
        activate PLAT
        CTRL <-- PLAT : AuthenticationRepository()
        deactivate PLAT

        CTRL -> AUTHREP : getCurrentUserSession()
        activate AUTHREP

        AUTHREP -> USER : isLoggedWithRole(GSM)
        activate USER

        AUTHREP <-- USER : "True/False"
        AUTHREP --> USER : getUserId(email)
        AUTHREP <-- USER : userId(email)
        deactivate USER

        CTRL <-- AUTHREP : userId(email)
        deactivate AUTHREP

        CTRL-> CTRL: getOrganizationByID(email)

        CTRL -> RepositorySingleton : getInstance()
        activate RepositorySingleton
        CTRL <-- RepositorySingleton : Repositories
        deactivate RepositorySingleton

        CTRL -> PLAT : getOrganizationRepository()
        activate PLAT
        PLAT-> CTRL : OrganizationRepository()
        deactivate PLAT


        CTRL -> ORGREP : getOrganizationByUserID(email)
        activate ORGREP
        loop
            ORGREP -> ORG : anyUserHasId(email)
            ORG --> ORGREP : True/False
        deactivate ORGREP
        end
        ORGREP --> CTRL : organization

        CTRL -> PLAT : getEmployeeRepository()
        activate PLAT
        CTRL <-- PLAT : EmployeeRepository()
        deactivate PLAT

        CTRL -> EMPREP : getEmployeenByUserID(email)
        activate EMPREP
        loop
            EMPREP -> ORG : anyUserHasId(email)
            ORG --> EMPREP : True/False
        deactivate EMPREP
        end
        EMPREP --> CTRL : employee


        CTRL -> EMP : create(Name, Size classification, Area, Address)
        activate EMP
        EMP -> CTRL : GreenSpace instance
        deactivate EMP

        EMP -> GreenSpace**: create(GreenSpace)
                note right of GreenSpace
                  GreenSpace constructor validates GreenSpace name
                endnote


                activate EMP
                    EMP -> EMP: validateGreenSpace(GreenSpace)

                    deactivate EMP

                
                deactivate EMP

                EMP --> CTRL : GreenSpace

        CTRL -> GSM : save(GreenSpace instance)
        activate GSM
        GSM --> CTRL : success
        deactivate GSM

        CTRL --> UI : operation success
        
    deactivate CTRL

    UI --> GSM : Display success message
    deactivate UI

deactivate GSM

@enduml
