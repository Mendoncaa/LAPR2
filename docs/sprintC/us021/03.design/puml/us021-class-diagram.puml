@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

class GreenSpace {
    - String name
    - String type
    - String location
}

class Task {
    - String title
    - GreenSpace greenSpace
    - String description
    - Status status
    - Urgency urgency
    - int days
    - int hours
    + Task(String title, GreenSpace greenSpace, String description, Urgency urgency, int days, int hours)
    + void validateTask()
    + String getTitle()
    + GreenSpace getGreenSpace()
    + String getDescription()
    + Status getStatus()
    + Urgency getUrgency()
    + int getDays()
    + int getHours()
    + String toString()
}

class Employee {
    + Task createTask(String title, String description, GreenSpace greenSpace, Urgency urgency, int days, int hours)
}

class ToDoListController {
    - TaskRepository taskRepository
    - GreenSpaceRepository greenSpaceRepository
    - AuthenticationRepository authenticationRepository
    - EmployeeRepository employeeRepository
    - OrganizationRepository organizationRepository
    + List<GreenSpace> getAvailableGreenSpaces(String userId)
    + void addNewTask(String title, String description, String greenSpaceId, Urgency urgency, int days, int hours)
}

class TaskRepository {
    + void save(Task task)
}

class GreenSpaceRepository {
    + List<GreenSpace> getGreenSpacesManagedBy(String userId)
}

class AuthenticationRepository {
    + UserSession getCurrentUserSession()
}

class UserSession {
    + boolean isLoggedWithRole(String role)
    + String getUserId()
}

class EmployeeRepository {
    + Employee getEmployeeByUserID(String email)
}

class OrganizationRepository {
    + Organization getOrganizationByUserID(String email)
}

class Organization {
    + boolean anyUserHasId(String email)
}

enum Status {
    PENDING,
    PLANNED,
    COMPLETED,
    CANCELED
}

class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getGreenSpaceRepository()
    + getAuthenticationRepository()
    + getEmployeeRepository()
    + getOrganizationRepository()
    + getTaskRepository()
    
}

enum Urgency {
    HIGH,
    MEDIUM,
    LOW
}

Repositories -> Repositories: instance
ToDoListController --> Repositories
Repositories --> TaskRepository
Repositories --> GreenSpaceRepository
Repositories --> AuthenticationRepository
Repositories --> EmployeeRepository
Repositories --> OrganizationRepository
AuthenticationRepository --> UserSession
TaskRepository --> Task
GreenSpaceRepository --> GreenSpace
UserSession --> Employee
OrganizationRepository --> Organization
EmployeeRepository --> Employee
Organization --> Employee

@enduml
