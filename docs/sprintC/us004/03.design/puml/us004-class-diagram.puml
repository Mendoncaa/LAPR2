@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction


class AssignSkillUI {
}

class AssignSkillController {
    - SkillRepository skillRepository
    - EmployeeRepository employeeRepository
    + AssignSkillController(skillRepository: SkillRepository, employeeRepository: EmployeeRepository)
    + assignSkillToTeamMember(employeeId: String, skillId: String): void
}

class Repositories {
    - Repositories()
    + getInstance(): Repositories
    + getEmployeeRepository(): EmployeeRepository
    + getSkillRepository(): SkillRepository
    + getAuthenticationRepository(): AuthenticationRepository
}

class OrganizationRepository {
    + getOrganizationByUserEmail(email)
}

class Organization {
    - String name
    - String vatNumber
    - String phone
    - String email
    - Address postalAddress
    - addSkill(skill)
    - validateSkill(skill)
    + Organization(name, vatNumber, webSite, phone, email, postalAddress)
    + createSkill(skill)
    - getUserByEmail(email)

}

class AuthenticationRepository {
    + getCurrentUserSession()
}

class UserSession {
    + isLoggedInWithRole()
    + getUserId()
}

class Employee {
    - String name
    - Date birthdate
    - Date admission date
    - Address postalAddress
    - String phone
    - String email
    - String ID doc type
    - String ID document number
    - String Taxpayer ID
    - Skill skill
    + CompareTo(TaxPayerID)
    + Clone()
    + toString()
    + hasThisEmail(mail)
}

class TeamMember {
    - String name
    - String vatNumber
    - String phone
    - String email
    - Address postalAddress
    - addSkill(skill)
    - validateSkill(skill)
    + Employee(name, vatNumber, webSite, phone, email, postalAddress)
    + createSkill(skill)
    - getUserByEmail(email)
}


class EmployeeRepository {
    - EmployeeRepository()
    + addSkill(Skill skill)
    + listEmployees()
    + emailExists(mail)
    + getEmployeeByUserEmail(email)
}

class SkillRepository {
    - List<Skill> skills
    + SkillRepository()
    + getSkillById(skillId: String): Skill
    + addSkill(skill: Skill): void
}

class Skill {
    - String skillName
    + Skill(skillName: String)
}

Repositories -> Repositories : instance
AssignSkillUI .> AssignSkillController
Repositories --> "1" OrganizationRepository
OrganizationRepository --> "*" Organization : organizations
Organization "1" --> "1" EmployeeRepository
Organization  --> "*" Employee : employs
AssignSkillController .> Repositories : repositories
Repositories --> "1" AuthenticationRepository
Repositories --> "1" EmployeeRepository
Repositories --> "1" SkillRepository
AuthenticationRepository --> UserSession
EmployeeRepository --> Employee : employees
SkillRepository --> Skill
Employee --> TeamMember : is a
Skill --> TeamMember  : assigned to


@enduml