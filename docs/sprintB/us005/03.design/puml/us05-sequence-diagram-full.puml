@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "Human Resources Manager" as HRM
participant ":HRMUI" as HRMUI
participant ":HRMController" as HRMController
participant "teamService:\nTeamService" as TeamService
participant "teamMemberRepository:\nteamMemberRepository" as teamMemberRepository
participant "team\n:Team" as Team

activate HRM

HRM -> HRMUI : Initiate team generation
activate HRMUI

HRMUI -> HRMController : Requests team generation
activate HRMController

HRMController -> HRMUI : Requests minimum and maximum size, and skills
deactivate HRMController

HRM -> HRMUI : Provides minSize, maxSize, and skills
activate HRMUI

HRMUI -> HRMController : Sends minSize, maxSize, and skills
activate HRMController

HRMController -> TeamService : generateTeam(minSize, maxSize, skills)
activate TeamService

TeamService -> Team : createTeam(minSize, maxSize)
activate Team

loop for each skill in skills
    TeamService -> TeamMemberRepository : findTeamMemberWithSkill(skill)
    activate TeamMemberRepository

    TeamMemberRepository --> TeamService : Returns TeamMember with skill
    deactivate TeamMemberRepository

    TeamService -> Team : assignTeamMember(TeamMember)
    activate Team

    Team --> TeamService : Returns assigned TeamMember
    deactivate Team
end

Team --> TeamService : Returns proposed team
deactivate Team

TeamService --> HRMController : Returns proposed team
deactivate TeamService

HRMController --> HRMUI : Presents proposed team
deactivate HRMController

HRMUI --> HRM : Displays proposed team
deactivate HRMUI

HRM -> HRMUI : Submits selection (Approve/Reject)
activate HRMUI

HRMUI -> HRMController : Submits selection (Approve/Reject)
activate HRMController

alt Approve
    HRMController -> TeamService : confirmTeam(team)
    activate TeamService

    TeamService --> HRMController : Confirms team approval
    deactivate TeamService

    HRMController --> HRMUI : Confirms team approval
    deactivate HRMController

    HRMUI --> HRM : Confirms team approval
    deactivate HRMUI

else Reject

    
    HRMController -> TeamService : rejectTeam(team)
    activate TeamService

    TeamService --> HRMController : Acknowledges team rejection
    deactivate TeamService

    HRMController --> HRMUI : Acknowledges team rejection
    deactivate HRMController

    HRMUI --> HRM : Acknowledges team rejection
    deactivate HRMUI

    ' Restart the loop for generating a new team
    loop Until Approved
        HRMUI -> HRMController : Requests team generation
        activate HRMController

        HRMController -> TeamService : generateTeam(minSize, maxSize, skills)
        activate TeamService

        TeamService -> Team : createTeam(minSize, maxSize)
        activate Team

        loop for each skill in skills
            TeamService -> TeamMemberRepository : findTeamMemberWithSkill(skill)
            activate TeamMemberRepository

            TeamMemberRepository --> TeamService : Returns TeamMember with skill
            deactivate TeamMemberRepository

            TeamService -> Team : assignTeamMember(TeamMember)
            activate Team

            Team --> TeamService : Returns assigned TeamMember
            deactivate Team
        end

        Team --> TeamService : Returns proposed team
        deactivate Team

        TeamService --> HRMController : Returns proposed team
        deactivate TeamService

        HRMController --> HRMUI : Presents proposed team
        deactivate HRMController

        HRMUI --> HRM : Displays proposed team
        deactivate HRMUI

        HRM -> HRMUI : Submits selection (Approve/Reject)
        activate HRMUI

        HRMUI -> HRMController : Submits selection (Approve/Reject)
        activate HRMController

        note right: After step 38, return to step 17
    
    end loop

end loop

@enduml
